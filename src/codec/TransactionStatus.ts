export enum TransactionStatus {
  TRANSACTION_STATUS_COMMITTED = "COMMITTED",
  TRANSACTION_STATUS_DUPLICATE_TRANSACTION_ALREADY_COMMITTED = "DUPLICATE_TRANSACTION_ALREADY_COMMITTED",
  TRANSACTION_STATUS_PENDING = "PENDING",
  TRANSACTION_STATUS_DUPLICATE_TRANSACTION_ALREADY_PENDING = "DUPLICATE_TRANSACTION_ALREADY_PENDING",
  TRANSACTION_STATUS_NO_RECORD_FOUND = "NO_RECORD_FOUND",
  TRANSACTION_STATUS_REJECTED_UNSUPPORTED_VERSION = "REJECTED_UNSUPPORTED_VERSION",
  TRANSACTION_STATUS_REJECTED_VIRTUAL_CHAIN_MISMATCH = "REJECTED_VIRTUAL_CHAIN_MISMATCH",
  TRANSACTION_STATUS_REJECTED_TIMESTAMP_WINDOW_EXCEEDED = "REJECTED_TIMESTAMP_WINDOW_EXCEEDED",
  TRANSACTION_STATUS_REJECTED_SIGNATURE_MISMATCH = "REJECTED_SIGNATURE_MISMATCH",
  TRANSACTION_STATUS_REJECTED_UNKNOWN_SIGNER_SCHEME = "REJECTED_UNKNOWN_SIGNER_SCHEME",
  TRANSACTION_STATUS_REJECTED_GLOBAL_PRE_ORDER = "REJECTED_GLOBAL_PRE_ORDER",
  TRANSACTION_STATUS_REJECTED_VIRTUAL_CHAIN_PRE_ORDER = "REJECTED_VIRTUAL_CHAIN_PRE_ORDER",
  TRANSACTION_STATUS_REJECTED_SMART_CONTRACT_PRE_ORDER = "REJECTED_SMART_CONTRACT_PRE_ORDER",
  TRANSACTION_STATUS_REJECTED_TIMESTAMP_AHEAD_OF_NODE_TIME = "REJECTED_TIMESTAMP_AHEAD_OF_NODE_TIME",
  TRANSACTION_STATUS_REJECTED_CONGESTION = "REJECTED_CONGESTION"
}

export function transactionStatusDecode(transactionStatus: number): TransactionStatus {
  switch (transactionStatus) {
    case 0:
      throw new Error(`reserved TransactionStatus received`);
    case 1:
      return TransactionStatus.TRANSACTION_STATUS_COMMITTED;
    case 2:
      return TransactionStatus.TRANSACTION_STATUS_DUPLICATE_TRANSACTION_ALREADY_COMMITTED;
    case 3:
      return TransactionStatus.TRANSACTION_STATUS_PENDING;
    case 4:
      return TransactionStatus.TRANSACTION_STATUS_DUPLICATE_TRANSACTION_ALREADY_PENDING;
    case 6:
      return TransactionStatus.TRANSACTION_STATUS_NO_RECORD_FOUND;
    case 7:
      return TransactionStatus.TRANSACTION_STATUS_REJECTED_UNSUPPORTED_VERSION;
    case 8:
      return TransactionStatus.TRANSACTION_STATUS_REJECTED_VIRTUAL_CHAIN_MISMATCH;
    case 9:
      return TransactionStatus.TRANSACTION_STATUS_REJECTED_TIMESTAMP_WINDOW_EXCEEDED;
    case 10:
      return TransactionStatus.TRANSACTION_STATUS_REJECTED_SIGNATURE_MISMATCH;
    case 11:
      return TransactionStatus.TRANSACTION_STATUS_REJECTED_UNKNOWN_SIGNER_SCHEME;
    case 12:
      return TransactionStatus.TRANSACTION_STATUS_REJECTED_GLOBAL_PRE_ORDER;
    case 13:
      return TransactionStatus.TRANSACTION_STATUS_REJECTED_VIRTUAL_CHAIN_PRE_ORDER;
    case 14:
      return TransactionStatus.TRANSACTION_STATUS_REJECTED_SMART_CONTRACT_PRE_ORDER;
    case 15:
      return TransactionStatus.TRANSACTION_STATUS_REJECTED_TIMESTAMP_AHEAD_OF_NODE_TIME;
    case 16:
      return TransactionStatus.TRANSACTION_STATUS_REJECTED_CONGESTION;
    default:
      throw new Error(`unsupported TransactionStatus received: ${transactionStatus}`);
  }
}